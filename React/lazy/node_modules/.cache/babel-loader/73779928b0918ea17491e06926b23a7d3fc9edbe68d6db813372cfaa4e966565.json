{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study Material\\\\Machine-Coding\\\\JSMachineCoding\\\\React\\\\lazy\\\\src\\\\components\\\\Lazy\\\\StocksWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TrendingUp, TrendingDown, DollarSign } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StocksWidget = ({\n  type = 'stocks'\n}) => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchStocks = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Simulate API call delay\n        await new Promise(resolve => setTimeout(resolve, 700));\n\n        // Mock stock data\n        const mockStocksData = type === 'crypto' ? [{\n          symbol: 'BTC',\n          name: 'Bitcoin',\n          price: (Math.random() * 50000 + 30000).toFixed(2),\n          change: (Math.random() * 20 - 10).toFixed(2),\n          changePercent: (Math.random() * 10 - 5).toFixed(2)\n        }, {\n          symbol: 'ETH',\n          name: 'Ethereum',\n          price: (Math.random() * 3000 + 2000).toFixed(2),\n          change: (Math.random() * 200 - 100).toFixed(2),\n          changePercent: (Math.random() * 10 - 5).toFixed(2)\n        }, {\n          symbol: 'ADA',\n          name: 'Cardano',\n          price: (Math.random() * 2 + 0.5).toFixed(3),\n          change: (Math.random() * 0.2 - 0.1).toFixed(3),\n          changePercent: (Math.random() * 10 - 5).toFixed(2)\n        }, {\n          symbol: 'SOL',\n          name: 'Solana',\n          price: (Math.random() * 200 + 100).toFixed(2),\n          change: (Math.random() * 20 - 10).toFixed(2),\n          changePercent: (Math.random() * 10 - 5).toFixed(2)\n        }] : [{\n          symbol: 'AAPL',\n          name: 'Apple Inc.',\n          price: (Math.random() * 50 + 150).toFixed(2),\n          change: (Math.random() * 10 - 5).toFixed(2),\n          changePercent: (Math.random() * 5 - 2.5).toFixed(2)\n        }, {\n          symbol: 'GOOGL',\n          name: 'Alphabet Inc.',\n          price: (Math.random() * 100 + 2500).toFixed(2),\n          change: (Math.random() * 50 - 25).toFixed(2),\n          changePercent: (Math.random() * 5 - 2.5).toFixed(2)\n        }, {\n          symbol: 'MSFT',\n          name: 'Microsoft Corp.',\n          price: (Math.random() * 50 + 300).toFixed(2),\n          change: (Math.random() * 10 - 5).toFixed(2),\n          changePercent: (Math.random() * 5 - 2.5).toFixed(2)\n        }, {\n          symbol: 'TSLA',\n          name: 'Tesla Inc.',\n          price: (Math.random() * 100 + 200).toFixed(2),\n          change: (Math.random() * 20 - 10).toFixed(2),\n          changePercent: (Math.random() * 5 - 2.5).toFixed(2)\n        }, {\n          symbol: 'AMZN',\n          name: 'Amazon.com Inc.',\n          price: (Math.random() * 50 + 3000).toFixed(2),\n          change: (Math.random() * 100 - 50).toFixed(2),\n          changePercent: (Math.random() * 5 - 2.5).toFixed(2)\n        }];\n        setStocks(mockStocksData);\n      } catch (err) {\n        setError('Failed to load stock data');\n        console.error('Stocks fetch error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStocks();\n  }, [type]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n        className: \"widget-icon\",\n        style: {\n          marginRight: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), \"Loading \", type, \" data...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 12\n    }, this);\n  }\n  if (!stocks || stocks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"No \", type, \" data available\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stocks-grid\",\n      children: stocks.map(stock => {\n        const isPositive = parseFloat(stock.change) >= 0;\n        const isPositivePercent = parseFloat(stock.changePercent) >= 0;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stock-symbol\",\n              children: stock.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stock-name\",\n              children: stock.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-price\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stock-current\",\n              children: [\"$\", stock.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `stock-change ${isPositive ? 'positive' : 'negative'}`,\n              children: [isPositive ? /*#__PURE__*/_jsxDEV(TrendingUp, {\n                size: 12,\n                style: {\n                  marginRight: '4px',\n                  display: 'inline'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(TrendingDown, {\n                size: 12,\n                style: {\n                  marginRight: '4px',\n                  display: 'inline'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this), isPositive ? '+' : '', stock.change, \" (\", isPositivePercent ? '+' : '', stock.changePercent, \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, stock.symbol, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '15px',\n        padding: '10px',\n        background: '#f8f9fa',\n        borderRadius: '6px',\n        fontSize: '0.8rem',\n        color: '#666',\n        textAlign: 'center'\n      },\n      children: [\"Data updates every 5 minutes \\u2022 \", type === 'crypto' ? 'Cryptocurrency' : 'Stock', \" prices\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(StocksWidget, \"ELrlRhPQhT5HFhj6gHMENFJ+S0I=\");\n_c = StocksWidget;\nexport default StocksWidget;\nvar _c;\n$RefreshReg$(_c, \"StocksWidget\");","map":{"version":3,"names":["React","useState","useEffect","TrendingUp","TrendingDown","DollarSign","jsxDEV","_jsxDEV","StocksWidget","type","_s","stocks","setStocks","loading","setLoading","error","setError","fetchStocks","Promise","resolve","setTimeout","mockStocksData","symbol","name","price","Math","random","toFixed","change","changePercent","err","console","className","children","style","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","length","map","stock","isPositive","parseFloat","isPositivePercent","size","display","marginTop","padding","background","borderRadius","fontSize","color","textAlign","_c","$RefreshReg$"],"sources":["D:/Study Material/Machine-Coding/JSMachineCoding/React/lazy/src/components/Lazy/StocksWidget.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TrendingUp, TrendingDown, DollarSign } from 'lucide-react';\r\n\r\nconst StocksWidget = ({ type = 'stocks' }) => {\r\n  const [stocks, setStocks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchStocks = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        // Simulate API call delay\r\n        await new Promise(resolve => setTimeout(resolve, 700));\r\n        \r\n        // Mock stock data\r\n        const mockStocksData = type === 'crypto' ? [\r\n          {\r\n            symbol: 'BTC',\r\n            name: 'Bitcoin',\r\n            price: (Math.random() * 50000 + 30000).toFixed(2),\r\n            change: (Math.random() * 20 - 10).toFixed(2),\r\n            changePercent: (Math.random() * 10 - 5).toFixed(2)\r\n          },\r\n          {\r\n            symbol: 'ETH',\r\n            name: 'Ethereum',\r\n            price: (Math.random() * 3000 + 2000).toFixed(2),\r\n            change: (Math.random() * 200 - 100).toFixed(2),\r\n            changePercent: (Math.random() * 10 - 5).toFixed(2)\r\n          },\r\n          {\r\n            symbol: 'ADA',\r\n            name: 'Cardano',\r\n            price: (Math.random() * 2 + 0.5).toFixed(3),\r\n            change: (Math.random() * 0.2 - 0.1).toFixed(3),\r\n            changePercent: (Math.random() * 10 - 5).toFixed(2)\r\n          },\r\n          {\r\n            symbol: 'SOL',\r\n            name: 'Solana',\r\n            price: (Math.random() * 200 + 100).toFixed(2),\r\n            change: (Math.random() * 20 - 10).toFixed(2),\r\n            changePercent: (Math.random() * 10 - 5).toFixed(2)\r\n          }\r\n        ] : [\r\n          {\r\n            symbol: 'AAPL',\r\n            name: 'Apple Inc.',\r\n            price: (Math.random() * 50 + 150).toFixed(2),\r\n            change: (Math.random() * 10 - 5).toFixed(2),\r\n            changePercent: (Math.random() * 5 - 2.5).toFixed(2)\r\n          },\r\n          {\r\n            symbol: 'GOOGL',\r\n            name: 'Alphabet Inc.',\r\n            price: (Math.random() * 100 + 2500).toFixed(2),\r\n            change: (Math.random() * 50 - 25).toFixed(2),\r\n            changePercent: (Math.random() * 5 - 2.5).toFixed(2)\r\n          },\r\n          {\r\n            symbol: 'MSFT',\r\n            name: 'Microsoft Corp.',\r\n            price: (Math.random() * 50 + 300).toFixed(2),\r\n            change: (Math.random() * 10 - 5).toFixed(2),\r\n            changePercent: (Math.random() * 5 - 2.5).toFixed(2)\r\n          },\r\n          {\r\n            symbol: 'TSLA',\r\n            name: 'Tesla Inc.',\r\n            price: (Math.random() * 100 + 200).toFixed(2),\r\n            change: (Math.random() * 20 - 10).toFixed(2),\r\n            changePercent: (Math.random() * 5 - 2.5).toFixed(2)\r\n          },\r\n          {\r\n            symbol: 'AMZN',\r\n            name: 'Amazon.com Inc.',\r\n            price: (Math.random() * 50 + 3000).toFixed(2),\r\n            change: (Math.random() * 100 - 50).toFixed(2),\r\n            changePercent: (Math.random() * 5 - 2.5).toFixed(2)\r\n          }\r\n        ];\r\n        \r\n        setStocks(mockStocksData);\r\n      } catch (err) {\r\n        setError('Failed to load stock data');\r\n        console.error('Stocks fetch error:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchStocks();\r\n  }, [type]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <DollarSign className=\"widget-icon\" style={{ marginRight: '8px' }} />\r\n        Loading {type} data...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  if (!stocks || stocks.length === 0) {\r\n    return <div className=\"error\">No {type} data available</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"stocks-grid\">\r\n        {stocks.map((stock) => {\r\n          const isPositive = parseFloat(stock.change) >= 0;\r\n          const isPositivePercent = parseFloat(stock.changePercent) >= 0;\r\n          \r\n          return (\r\n            <div key={stock.symbol} className=\"stock-item\">\r\n              <div className=\"stock-info\">\r\n                <div className=\"stock-symbol\">{stock.symbol}</div>\r\n                <div className=\"stock-name\">{stock.name}</div>\r\n              </div>\r\n              <div className=\"stock-price\">\r\n                <div className=\"stock-current\">${stock.price}</div>\r\n                <div className={`stock-change ${isPositive ? 'positive' : 'negative'}`}>\r\n                  {isPositive ? (\r\n                    <TrendingUp size={12} style={{ marginRight: '4px', display: 'inline' }} />\r\n                  ) : (\r\n                    <TrendingDown size={12} style={{ marginRight: '4px', display: 'inline' }} />\r\n                  )}\r\n                  {isPositive ? '+' : ''}{stock.change} ({isPositivePercent ? '+' : ''}{stock.changePercent}%)\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      \r\n      <div style={{ \r\n        marginTop: '15px', \r\n        padding: '10px', \r\n        background: '#f8f9fa', \r\n        borderRadius: '6px',\r\n        fontSize: '0.8rem',\r\n        color: '#666',\r\n        textAlign: 'center'\r\n      }}>\r\n        Data updates every 5 minutes • {type === 'crypto' ? 'Cryptocurrency' : 'Stock'} prices\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StocksWidget;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}