{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study Material\\\\Machine-Coding\\\\JSMachineCoding\\\\React\\\\lazy\\\\src\\\\components\\\\FileExp\\\\context\\\\FileExplorerContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport data from \"../Data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FileExplorerContext = /*#__PURE__*/createContext();\nexport default function FileExplorerContextWrapper({\n  children\n}) {\n  _s();\n  const [nodes, setNodes] = useState(data);\n  const addNode = (parentId, value) => {\n    const newId = Date.now();\n    const newData = {\n      id: newId,\n      name: value,\n      parentId: parentId\n    };\n    const isFolder = value.split(\".\");\n    if (isFolder.length > 1) {\n      //it is a file\n      newData.type = \"file\";\n    } else {\n      //it is a folder\n      newData.type = \"folder\";\n      newData.children = [];\n    }\n    const updatedNodes = {\n      ...nodes,\n      [newId]: newData\n    };\n    console.log(updatedNodes);\n    updatedNodes[parentId].children.unshift(newId);\n    setNodes(updatedNodes);\n  };\n  const editNode = (id, value) => {\n    const updatedNodes = {\n      ...nodes\n    };\n    updatedNodes[id].name = value;\n    setNodes(updatedNodes);\n  };\n  const deleteNode = id => {\n    const updatedNodes = {\n      ...nodes\n    };\n    const parentId = updatedNodes[id].parentId;\n    if (parentId) {\n      updatedNodes[parentId].children = updatedNodes[parentId].children.filter(childId => {\n        return childId !== id;\n      });\n    }\n    const queue = [id];\n    while (queue.length > 0) {\n      const currentId = queue.shift();\n      if (nodes[currentId].children) queue.push(...nodes[currentId].children);\n      delete updatedNodes[currentId];\n    }\n    setNodes(updatedNodes);\n  };\n  return /*#__PURE__*/_jsxDEV(FileExplorerContext.Provider, {\n    value: {\n      nodes,\n      deleteNode,\n      addNode,\n      editNode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(FileExplorerContextWrapper, \"0MM9DAho9etskPZtIZVNNkY0AzQ=\");\n_c = FileExplorerContextWrapper;\nvar _c;\n$RefreshReg$(_c, \"FileExplorerContextWrapper\");","map":{"version":3,"names":["createContext","useState","data","jsxDEV","_jsxDEV","FileExplorerContext","FileExplorerContextWrapper","children","_s","nodes","setNodes","addNode","parentId","value","newId","Date","now","newData","id","name","isFolder","split","length","type","updatedNodes","console","log","unshift","editNode","deleteNode","filter","childId","queue","currentId","shift","push","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Study Material/Machine-Coding/JSMachineCoding/React/lazy/src/components/FileExp/context/FileExplorerContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nimport data from \"../Data\";\r\n\r\nexport const FileExplorerContext = createContext();\r\n\r\nexport default function FileExplorerContextWrapper({ children }) {\r\n  const [nodes, setNodes] = useState(data);\r\n\r\n  const addNode = (parentId, value) => {\r\n    const newId = Date.now();\r\n    const newData = { id: newId, name: value, parentId: parentId };\r\n    const isFolder = value.split(\".\");\r\n    if (isFolder.length > 1) {\r\n      //it is a file\r\n      newData.type = \"file\";\r\n    } else {\r\n      //it is a folder\r\n      newData.type = \"folder\";\r\n      newData.children = [];\r\n    }\r\n    const updatedNodes = { ...nodes, [newId]: newData };\r\n    console.log(updatedNodes);\r\n    updatedNodes[parentId].children.unshift(newId);\r\n    setNodes(updatedNodes);\r\n  };\r\n\r\n  const editNode = (id, value) => {\r\n    const updatedNodes = { ...nodes };\r\n    updatedNodes[id].name = value;\r\n    setNodes(updatedNodes);\r\n  };\r\n\r\n  const deleteNode = (id) => {\r\n    const updatedNodes = { ...nodes };\r\n    const parentId = updatedNodes[id].parentId;\r\n    if (parentId) {\r\n      updatedNodes[parentId].children = updatedNodes[parentId].children.filter(\r\n        (childId) => {\r\n          return childId !== id;\r\n        }\r\n      );\r\n    }\r\n    const queue = [id];\r\n    while (queue.length > 0) {\r\n      const currentId = queue.shift();\r\n      if (nodes[currentId].children) queue.push(...nodes[currentId].children);\r\n      delete updatedNodes[currentId];\r\n    }\r\n    setNodes(updatedNodes);\r\n  };\r\n\r\n  return (\r\n    <FileExplorerContext.Provider\r\n      value={{ nodes, deleteNode, addNode, editNode }}\r\n    >\r\n      {children}\r\n    </FileExplorerContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}