{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study Material\\\\Machine-Coding\\\\lazy\\\\src\\\\components\\\\WeatherWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Thermometer, Droplets, Wind, Eye } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherWidget = ({\n  city = 'New York'\n}) => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Using a free weather API (OpenWeatherMap alternative)\n        // For demo purposes, we'll use mock data since API keys are required\n        // In a real app, you would use: const API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\n\n        // Simulate API call delay\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        // Mock weather data\n        const mockWeatherData = {\n          location: city,\n          temperature: Math.floor(Math.random() * 30) + 10,\n          // 10-40Â°C\n          description: ['Sunny', 'Cloudy', 'Rainy', 'Partly Cloudy'][Math.floor(Math.random() * 4)],\n          humidity: Math.floor(Math.random() * 40) + 40,\n          // 40-80%\n          windSpeed: Math.floor(Math.random() * 20) + 5,\n          // 5-25 km/h\n          visibility: Math.floor(Math.random() * 10) + 5,\n          // 5-15 km\n          feelsLike: Math.floor(Math.random() * 30) + 10\n        };\n        setWeather(mockWeatherData);\n      } catch (err) {\n        setError('Failed to load weather data');\n        console.error('Weather fetch error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWeather();\n  }, [city]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(Thermometer, {\n        className: \"widget-icon\",\n        style: {\n          marginRight: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), \"Loading weather data...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  if (!weather) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"No weather data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature\",\n          children: [weather.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-description\",\n          children: weather.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '0.9rem',\n            color: '#666',\n            marginTop: '5px'\n          },\n          children: [\"Feels like \", weather.feelsLike, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '1.1rem',\n            fontWeight: '600',\n            color: '#333'\n          },\n          children: weather.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Droplets, {\n          size: 16,\n          color: \"#667eea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Humidity: \", weather.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Wind, {\n          size: 16,\n          color: \"#667eea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Wind: \", weather.windSpeed, \" km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Eye, {\n          size: 16,\n          color: \"#667eea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Visibility: \", weather.visibility, \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Thermometer, {\n          size: 16,\n          color: \"#667eea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Feels like: \", weather.feelsLike, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherWidget, \"TVsks5rssGOnhEQ1DibgKtVD/q4=\");\n_c = WeatherWidget;\nexport default WeatherWidget;\nvar _c;\n$RefreshReg$(_c, \"WeatherWidget\");","map":{"version":3,"names":["React","useState","useEffect","Thermometer","Droplets","Wind","Eye","jsxDEV","_jsxDEV","WeatherWidget","city","_s","weather","setWeather","loading","setLoading","error","setError","fetchWeather","Promise","resolve","setTimeout","mockWeatherData","location","temperature","Math","floor","random","description","humidity","windSpeed","visibility","feelsLike","err","console","className","children","style","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","marginTop","textAlign","fontWeight","display","alignItems","gap","size","_c","$RefreshReg$"],"sources":["D:/Study Material/Machine-Coding/lazy/src/components/WeatherWidget.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Thermometer, Droplets, Wind, Eye } from 'lucide-react';\r\n\r\nconst WeatherWidget = ({ city = 'New York' }) => {\r\n  const [weather, setWeather] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchWeather = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        // Using a free weather API (OpenWeatherMap alternative)\r\n        // For demo purposes, we'll use mock data since API keys are required\r\n        // In a real app, you would use: const API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\r\n        \r\n        // Simulate API call delay\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        \r\n        // Mock weather data\r\n        const mockWeatherData = {\r\n          location: city,\r\n          temperature: Math.floor(Math.random() * 30) + 10, // 10-40Â°C\r\n          description: ['Sunny', 'Cloudy', 'Rainy', 'Partly Cloudy'][Math.floor(Math.random() * 4)],\r\n          humidity: Math.floor(Math.random() * 40) + 40, // 40-80%\r\n          windSpeed: Math.floor(Math.random() * 20) + 5, // 5-25 km/h\r\n          visibility: Math.floor(Math.random() * 10) + 5, // 5-15 km\r\n          feelsLike: Math.floor(Math.random() * 30) + 10,\r\n        };\r\n        \r\n        setWeather(mockWeatherData);\r\n      } catch (err) {\r\n        setError('Failed to load weather data');\r\n        console.error('Weather fetch error:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchWeather();\r\n  }, [city]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <Thermometer className=\"widget-icon\" style={{ marginRight: '8px' }} />\r\n        Loading weather data...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  if (!weather) {\r\n    return <div className=\"error\">No weather data available</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"weather-info\">\r\n        <div className=\"weather-main\">\r\n          <div className=\"temperature\">{weather.temperature}Â°C</div>\r\n          <div className=\"weather-description\">{weather.description}</div>\r\n          <div style={{ fontSize: '0.9rem', color: '#666', marginTop: '5px' }}>\r\n            Feels like {weather.feelsLike}Â°C\r\n          </div>\r\n        </div>\r\n        <div style={{ textAlign: 'right' }}>\r\n          <div style={{ fontSize: '1.1rem', fontWeight: '600', color: '#333' }}>\r\n            {weather.location}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"weather-details\">\r\n        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n          <Droplets size={16} color=\"#667eea\" />\r\n          <span>Humidity: {weather.humidity}%</span>\r\n        </div>\r\n        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n          <Wind size={16} color=\"#667eea\" />\r\n          <span>Wind: {weather.windSpeed} km/h</span>\r\n        </div>\r\n        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n          <Eye size={16} color=\"#667eea\" />\r\n          <span>Visibility: {weather.visibility} km</span>\r\n        </div>\r\n        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n          <Thermometer size={16} color=\"#667eea\" />\r\n          <span>Feels like: {weather.feelsLike}Â°C</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherWidget;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}