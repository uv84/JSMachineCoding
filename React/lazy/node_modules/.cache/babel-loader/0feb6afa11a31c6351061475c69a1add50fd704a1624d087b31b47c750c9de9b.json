{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study Material\\\\Machine-Coding\\\\JSMachineCoding\\\\React\\\\lazy\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport WeatherWidget from './components/WeatherWidget';\nimport NewsWidget from './components/NewsWidget';\nimport StocksWidget from './components/StocksWidget';\nimport { Cloud, Newspaper, TrendingUp } from 'lucide-react';\nimport Carousel from './components/carousel/Carousel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  // const [visibleWidgets, setVisibleWidgets] = useState(new Set());\n\n  // const handleWidgetVisibility = (widgetId, isVisible) => {\n  //   setVisibleWidgets(prev => {\n  //     const newSet = new Set(prev);\n  //     if (isVisible) {\n  //       newSet.add(widgetId);\n  //     }\n  //     return newSet;\n  //   });\n  // };\n\n  return (\n    /*#__PURE__*/\n    //     <div className=\"container\">\n    //       <div className=\"header\">\n    //         <h1>Lazy Dashboard</h1>\n    //         <p>Widgets load only when they become visible in the viewport</p>\n    //       </div>\n    //       <div className=\"dashboard\">\n    //         <LazyWidget\n    //           id=\"weather\"\n    //           title=\"Weather\"\n    //           icon={<Cloud className=\"widget-icon\" />}\n    //           onVisibilityChange={handleWidgetVisibility}\n    //           isVisible={visibleWidgets.has('weather')}\n    //         >\n    //           <WeatherWidget />\n    //         </LazyWidget>\n    //         <LazyWidget\n    //           id=\"news\"\n    //           title=\"Latest News\"\n    //           icon={<Newspaper className=\"widget-icon\" />}\n    //           onVisibilityChange={handleWidgetVisibility}\n    //           isVisible={visibleWidgets.has('news')}\n    //         >\n    //           <NewsWidget />\n    //         </LazyWidget>\n    //         <LazyWidget\n    //           id=\"stocks\"\n    //           title=\"Stock Market\"\n    //           icon={<TrendingUp className=\"widget-icon\" />}\n    //           onVisibilityChange={handleWidgetVisibility}\n    //           isVisible={visibleWidgets.has('stocks')}\n    //         >\n    //           <StocksWidget />\n    //         </LazyWidget>\n    //         {/* Additional widgets to demonstrate lazy loading */}\n    //         <LazyWidget\n    //           id=\"weather2\"\n    //           title=\"Weather (Secondary)\"\n    //           icon={<Cloud className=\"widget-icon\" />}\n    //           onVisibilityChange={handleWidgetVisibility}\n    //           isVisible={visibleWidgets.has('weather2')}\n    //         >\n    //           <WeatherWidget city=\"London\" />\n    //         </LazyWidget>\n    //         <LazyWidget\n    //           id=\"news2\"\n    //           title=\"Tech News\"\n    //           icon={<Newspaper className=\"widget-icon\" />}\n    //           onVisibilityChange={handleWidgetVisibility}\n    //           isVisible={visibleWidgets.has('news2')}\n    //         >\n    //           <NewsWidget category=\"technology\" />\n    //         </LazyWidget>\n    //         <LazyWidget\n    //           id=\"stocks2\"\n    //           title=\"Crypto Market\"\n    //           icon={<TrendingUp className=\"widget-icon\" />}\n    //           onVisibilityChange={handleWidgetVisibility}\n    //           isVisible={visibleWidgets.has('stocks2')}\n    //         >\n    //           <StocksWidget type=\"crypto\" />\n    //         </LazyWidget>\n    //       </div>\n    //     </div>\n    //   );\n    // };\n    // // LazyWidget component that handles intersection observer\n    // const LazyWidget = ({ id, title, icon, children, onVisibilityChange, isVisible }) => {\n    //   const { ref, inView } = useInView({\n    //     threshold: 0.1,\n    //     triggerOnce: true,\n    //   });\n    //   React.useEffect(() => {\n    //     if (inView) {\n    //       onVisibilityChange(id, true);\n    //     }\n    //   }, [inView, id, onVisibilityChange]);\n    //   return (\n    //     <div ref={ref} className=\"widget\">\n    //       <div className=\"widget-header\">\n    //         <div className=\"widget-title\">\n    //           {icon}\n    //           {title}\n    //         </div>\n    //       </div>\n    //       {inView && isVisible ? (\n    //         children\n    //       ) : (\n    //         <div className=\"loading\">\n    //           Scroll to load {title.toLowerCase()}...\n    //         </div>\n    //       )}\n    //     </div>\n    _jsxDEV(Carousel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 3\n    }, this)\n  );\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useInView","WeatherWidget","NewsWidget","StocksWidget","Cloud","Newspaper","TrendingUp","Carousel","jsxDEV","_jsxDEV","App","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Study Material/Machine-Coding/JSMachineCoding/React/lazy/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport WeatherWidget from './components/WeatherWidget';\r\nimport NewsWidget from './components/NewsWidget';\r\nimport StocksWidget from './components/StocksWidget';\r\nimport { Cloud, Newspaper, TrendingUp } from 'lucide-react';\r\nimport Carousel from './components/carousel/Carousel';\r\n\r\nconst App = () => {\r\n  // const [visibleWidgets, setVisibleWidgets] = useState(new Set());\r\n\r\n  // const handleWidgetVisibility = (widgetId, isVisible) => {\r\n  //   setVisibleWidgets(prev => {\r\n  //     const newSet = new Set(prev);\r\n  //     if (isVisible) {\r\n  //       newSet.add(widgetId);\r\n  //     }\r\n  //     return newSet;\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n//     <div className=\"container\">\r\n//       <div className=\"header\">\r\n//         <h1>Lazy Dashboard</h1>\r\n//         <p>Widgets load only when they become visible in the viewport</p>\r\n//       </div>\r\n      \r\n//       <div className=\"dashboard\">\r\n//         <LazyWidget\r\n//           id=\"weather\"\r\n//           title=\"Weather\"\r\n//           icon={<Cloud className=\"widget-icon\" />}\r\n//           onVisibilityChange={handleWidgetVisibility}\r\n//           isVisible={visibleWidgets.has('weather')}\r\n//         >\r\n//           <WeatherWidget />\r\n//         </LazyWidget>\r\n\r\n//         <LazyWidget\r\n//           id=\"news\"\r\n//           title=\"Latest News\"\r\n//           icon={<Newspaper className=\"widget-icon\" />}\r\n//           onVisibilityChange={handleWidgetVisibility}\r\n//           isVisible={visibleWidgets.has('news')}\r\n//         >\r\n//           <NewsWidget />\r\n//         </LazyWidget>\r\n\r\n//         <LazyWidget\r\n//           id=\"stocks\"\r\n//           title=\"Stock Market\"\r\n//           icon={<TrendingUp className=\"widget-icon\" />}\r\n//           onVisibilityChange={handleWidgetVisibility}\r\n//           isVisible={visibleWidgets.has('stocks')}\r\n//         >\r\n//           <StocksWidget />\r\n//         </LazyWidget>\r\n\r\n//         {/* Additional widgets to demonstrate lazy loading */}\r\n//         <LazyWidget\r\n//           id=\"weather2\"\r\n//           title=\"Weather (Secondary)\"\r\n//           icon={<Cloud className=\"widget-icon\" />}\r\n//           onVisibilityChange={handleWidgetVisibility}\r\n//           isVisible={visibleWidgets.has('weather2')}\r\n//         >\r\n//           <WeatherWidget city=\"London\" />\r\n//         </LazyWidget>\r\n\r\n//         <LazyWidget\r\n//           id=\"news2\"\r\n//           title=\"Tech News\"\r\n//           icon={<Newspaper className=\"widget-icon\" />}\r\n//           onVisibilityChange={handleWidgetVisibility}\r\n//           isVisible={visibleWidgets.has('news2')}\r\n//         >\r\n//           <NewsWidget category=\"technology\" />\r\n//         </LazyWidget>\r\n\r\n//         <LazyWidget\r\n//           id=\"stocks2\"\r\n//           title=\"Crypto Market\"\r\n//           icon={<TrendingUp className=\"widget-icon\" />}\r\n//           onVisibilityChange={handleWidgetVisibility}\r\n//           isVisible={visibleWidgets.has('stocks2')}\r\n//         >\r\n//           <StocksWidget type=\"crypto\" />\r\n//         </LazyWidget>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // LazyWidget component that handles intersection observer\r\n// const LazyWidget = ({ id, title, icon, children, onVisibilityChange, isVisible }) => {\r\n//   const { ref, inView } = useInView({\r\n//     threshold: 0.1,\r\n//     triggerOnce: true,\r\n//   });\r\n\r\n//   React.useEffect(() => {\r\n//     if (inView) {\r\n//       onVisibilityChange(id, true);\r\n//     }\r\n//   }, [inView, id, onVisibilityChange]);\r\n\r\n//   return (\r\n//     <div ref={ref} className=\"widget\">\r\n//       <div className=\"widget-header\">\r\n//         <div className=\"widget-title\">\r\n//           {icon}\r\n//           {title}\r\n//         </div>\r\n//       </div>\r\n      \r\n//       {inView && isVisible ? (\r\n//         children\r\n//       ) : (\r\n//         <div className=\"loading\">\r\n//           Scroll to load {title.toLowerCase()}...\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n  <Carousel/>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,6BAA6B;AACvD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,KAAK,EAAEC,SAAS,EAAEC,UAAU,QAAQ,cAAc;AAC3D,OAAOC,QAAQ,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChb,CAAC;AAACC,EAAA,GAtHIL,GAAG;AAwHT,eAAeA,GAAG;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}